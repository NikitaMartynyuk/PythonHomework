# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n — кол-во элементов первого множества.
# m — кол-во элементов второго множества. Затем пользователь вводит сами элементы множеств.

# list_1 = [8, 11, 3, 22, 11, 5, 22]
# k = 11

# def count_occurrences(list_1, k):
#     count = 0
#     for num in list_1:
#         if num == k:
#             count += 1
#     return count

# result = count_occurrences(list_1, k)
# print("Число", k, "встречается", result, "раз(а)")




# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растёт на круглой грядке,
# причём кусты высажены только по окружности. Таким образом, у каждого куста есть ровно два
# соседних. Всего на грядке растёт N кустов.Эти кусты обладают разной урожайностью, поэтому
# ко времени сбора на них выросло различное число ягод — на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники.
# Эта система состоит из управляющего модуля и нескольких собирающих модулей. 
# Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом,
# собирает ягоды с этого куста и с двух соседних с ним. Напишите программу для нахождения
# максимального числа ягод, которое может собрать за один заход собирающий модуль, находясь 
# перед некоторым кустом заданной во входном файле грядки.



a = [1, 2, 3, 4, 5]  # Пример грядки с числом ягод на каждом кусте

def max_berries(a):
    n = len(a)
    dp = [0] * (n + 1)
    dp[1] = a[0]
    
    for i in range(2, n + 1):
        dp[i] = max(dp[i-2] + a[i-1], dp[i-1])
    
    return dp[n]

result = max_berries(a)

print(result)   # Выведет 9
